{
  "name": "terraform-template",
  "build": {
    "dockerfile": "Dockerfile",
  },
  "workspaceFolder": "/workspace",
  "workspaceMount": "type=bind,source=${localWorkspaceFolder},target=/workspace",
  "settings": {
    "files.eol": "\n",
    "files.exclude": {
      "**/.vagrant": true,
      "**/.git": true
    },
    "[settings.json]": {
      "editor.formatOnSave": false
    },
    "[devcontainer.json]": {
      "editor.formatOnSave": false
    },
    "terminal.integrated.profiles.linux": {
      "bash (login)": {
        "path": "/bin/bash",
        "args": [
          "--login"
        ]
      }
    },
    "go.testFlags": [
      "-v"
    ],
    "go.toolsManagement.checkForUpdates": "proxy",
    "go.useLanguageServer": true,
    "go.autocompleteUnimportedPackages": true,
    "go.gotoSymbol.includeImports": true,
    "go.gotoSymbol.includeGoroot": true,
    "gopls": {
      "completeUnimported": true,
      "deepCompletion": true,
      "usePlaceholders": false,
      "staticcheck": true
    },
    "go.buildOnSave": "package",
    "go.lintOnSave": "package",
    "go.vetOnSave": "package",
    "go.testOnSave": false,
    "[go]": {
      "editor.formatOnSave": true,
      "editor.codeActionsOnSave": {
        "source.organizeImports": true
      },
      "editor.snippetSuggestions": "none"
    },
    "[go.mod]": {
      "editor.formatOnSave": true,
      "editor.codeActionsOnSave": {
        "source.organizeImports": true
      }
    },
  },
  "extensions": [
    "golang.Go",
    "bungcip.better-toml",
    "mutantdino.resourcemonitor",
    "EditorConfig.EditorConfig",
    "kevinkyang.auto-comment-blocks",
    "ms-azuretools.vscode-docker",
    "karyfoundation.comment",
    "wmaurer.change-case",
    "skellock.just",
    "wholroyd.hcl",
    "chrislajoie.vscode-modelines",
    "hashicorp.terraform",
    "wholroyd.hcl",
    "gruntfuggly.todo-tree"
  ],
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],
  "runArgs": [
    "--init",
    "--entrypoint","",
    "--network","default",
    "--name","terraform-template"
  ],
  "remoteUser": "vscode",
  "postCreateCommand": "go version && terraform version"
}
